前缀表达式和后缀表达式
（3+4）* 5 - 6的前缀表达式是- * + 3 4 5 6

（3+4）* 5 - 6的后缀表达式是 3 4 + 5 * 6 -
后缀表达式较为常用，计算机熟悉的表达式。


中缀表达式转后缀表达式
思路：
    初始化两个栈：运算符栈s1和存储中间结果栈s2
    从右至左扫描中缀表达式
    遇到操作数时，将其压入s2
    遇到运算符时，比较其与s1栈顶运算符的优先级
        如果s1为空，或栈顶运算符为 "(" 则直接将此运算符入栈
        否则，若优先级比栈顶运算符的高，也将运算符压入s1
        否则，将s1栈顶的运算符弹出并压入s2中，再次转到 第一步，与s1中新的栈顶运算符相比较；
    遇到括号时：
        如果时左括号"("则直接压入s1
        如果是右括号")"，则依次弹出s1栈顶的运算符,并压入s2，直到遇到左括号为止，此时将这一堆括号丢弃
    重复 2 - 5，直到表达式的最右边
    将s1中剩余的运算符依次弹出并压入s2
    依次弹出s2中的元素输出，结果的逆序即为中缀表达式对应的后缀表达式。

逆波兰计算器
    大体思路
        中缀表达式转为后缀表达式，然后通过逆波兰计算器计算后缀表达式；
        先将中缀表达式转为对应的List，方便运算； (3 + 4) * 5 - 6 转成[(, 3, +, 4, ), *, 5, -, 6]
        将list转为后缀表达式对应的list [(, 3, +, 4, ), 5, -, 6] 转为 [3, 4, +, 5, *, 6, -]
